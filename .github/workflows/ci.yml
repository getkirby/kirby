name: CI
on: [ push, pull_request ]

jobs:
  backend-tests:
    name: PHP ${{ matrix.php }}

    # if on pull request, only run if from a fork
    # (our own repo is covered by the push event)
    if: >
      github.event_name != 'pull_request' ||
      github.event.pull_request.head.repo.full_name != github.repository

    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        php: [ "7.4", "8.0", "8.1" ]
    env:
      extensions: mbstring, ctype, curl, gd, apcu, memcached
      ini: apc.enabled=1, apc.enable_cli=1, pcov.directory=., "pcov.exclude=\"~(vendor|tests)~\""

    steps:
      - name: Checkout
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # pin@v2
        with:
          fetch-depth: 2

      - name: Preparations
        run: mkdir sarif

      - name: Install memcached
        uses: niden/actions-memcached@3b3ecd9d0d035ea92db716dc1540a7dbe9e56349 # pin@v7

      - name: Install system locales
        run: sudo apt-get update && sudo apt-get install -y locales-all

      - name: Setup PHP cache environment
        id: ext-cache
        uses: shivammathur/cache-extensions@2e789925e438042ecda2b83f0fd00bbc016da76e # pin@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          key: php-v1

      - name: Cache PHP extensions
        uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353 # pin@v2
        with:
          path: ${{ steps.ext-cache.outputs.dir }}
          key: ${{ steps.ext-cache.outputs.key }}
          restore-keys: ${{ steps.ext-cache.outputs.key }}

      - name: Setup PHP environment
        uses: shivammathur/setup-php@e2e76ea34f2059c0d66bf5c54ea75610185397f3 # pin@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          ini-values: ${{ env.ini }}
          coverage: pcov
          tools: phpunit:9.5.10, psalm:4.11.2

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Cache analysis data
        id: finishPrepare
        uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353 # pin@v2
        with:
          path: ~/.cache/psalm
          key: backend-analysis-${{ matrix.php }}

      - name: Run tests
        if: always() && steps.finishPrepare.outcome == 'success'
        run: phpunit --coverage-clover ${{ github.workspace }}/clover.xml

      - name: Statically analyze using Psalm
        if: always() && steps.finishPrepare.outcome == 'success'
        run: psalm --output-format=github --php-version=${{ matrix.php }} --report=sarif/psalm.sarif --report-show-info=false

      - name: Upload coverage results to Codecov
        uses: codecov/codecov-action@f32b3a3741e1053eb607407145bc9619351dc93b # pin@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # for better reliability if the GitHub API is down
          fail_ci_if_error: true
          files: ${{ github.workspace }}/clover.xml
          flags: backend
          env_vars: PHP
        env:
          PHP: ${{ matrix.php }}

      - name: Upload code scanning results to GitHub
        if: always() && steps.finishPrepare.outcome == 'success'
        uses: github/codeql-action/upload-sarif@fd3190bba58b65cbefb742009518a03a07af24d7 # pin@v1
        with:
          sarif_file: sarif

  frontend-e2e:
    name: Frontend E2E

    # if on pull request, only run if from a fork
    # (our own repo is covered by the push event)
    if: >
      github.event_name != 'pull_request' ||
      github.event.pull_request.head.repo.full_name != github.repository

    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      php: "8.0"
      extensions: mbstring, ctype, curl, gd, apcu, memcached

    steps:
      - name: Checkout
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # pin@v2
        with:
          path: kirby

      - name: Checkout Sandbox
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # pin@v2
        with:
          repository: getkirby/sandbox
          path: sandbox
          submodules: true

      - name: Preparations
        run: |
          # set up log directory
          mkdir -p ${{ github.workspace }}/_logs

          # link Kirby to Sandbox
          rm -rf ${{ github.workspace }}/sandbox/kirby
          ln -s ${{ github.workspace }}/kirby ${{ github.workspace }}/sandbox/kirby

      - name: Setup PHP cache environment
        id: ext-cache
        uses: shivammathur/cache-extensions@2e789925e438042ecda2b83f0fd00bbc016da76e # pin@v1
        with:
          php-version: ${{ env.php }}
          extensions: ${{ env.extensions }}
          key: e2e-v1

      - name: Cache PHP extensions
        uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353 # pin@v2
        with:
          path: ${{ steps.ext-cache.outputs.dir }}
          key: ${{ steps.ext-cache.outputs.key }}
          restore-keys: ${{ steps.ext-cache.outputs.key }}

      - name: Setup PHP environment
        uses: shivammathur/setup-php@e2e76ea34f2059c0d66bf5c54ea75610185397f3 # pin@v2
        with:
          php-version: ${{ env.php }}
          extensions: ${{ env.extensions }}
          coverage: none

      - name: Install dependencies
        uses: cypress-io/github-action@2113e5bc19c45979ba123df6e07256d2aaba9a33 # pin@v2
        with:
          working-directory: kirby/panel
          runTests: false

      - name: Build Panel dist files
        run: npm run build
        working-directory: kirby/panel

      - name: Start the PHP server
        run: php -S 127.0.0.1:8000 -t ${{ github.workspace }}/sandbox/public ${{ github.workspace }}/sandbox/router.php &> ${{ github.workspace }}/_logs/php.log &
        working-directory: kirby/panel

      - name: Run tests
        uses: cypress-io/github-action@2113e5bc19c45979ba123df6e07256d2aaba9a33 # pin@v2
        with:
          working-directory: kirby/panel
          install: false
          wait-on: "http://127.0.0.1:8000/panel/login"
          wait-on-timeout: 5
          config: baseUrl=http://127.0.0.1:8000

      - name: Print log files
        if: always()
        run: |
          for log in ${{ github.workspace }}/_logs/*; do
            echo "::group::$(basename $log)"
            cat $log
            echo "::endgroup::"
          done

      - name: Archive Cypress screenshots
        if: failure()
        uses: actions/upload-artifact@27121b0bdffd731efa15d66772be8dc71245d074 # pin@v2
        with:
          name: cypress-screenshots
          path: kirby/panel/cypress/screenshots

      - name: Archive Cypress videos
        if: always()
        uses: actions/upload-artifact@27121b0bdffd731efa15d66772be8dc71245d074 # pin@v2
        with:
          name: cypress-videos
          path: kirby/panel/cypress/videos

  backend-analysis:
    name: Backend Analysis

    # if on pull request, only run if from a fork
    # (our own repo is covered by the push event)
    if: >
      github.event_name != 'pull_request' ||
      github.event.pull_request.head.repo.full_name != github.repository

    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      php: "8.0"
      extensions: mbstring, ctype, curl, gd, apcu, memcached

    steps:
      - name: Checkout
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # pin@v2

      - name: Preparations
        run: mkdir sarif

      - name: Setup PHP cache environment
        id: ext-cache
        uses: shivammathur/cache-extensions@2e789925e438042ecda2b83f0fd00bbc016da76e # pin@v1
        with:
          php-version: ${{ env.php }}
          extensions: ${{ env.extensions }}
          key: php-analysis-v1

      - name: Cache PHP extensions
        uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353 # pin@v2
        with:
          path: ${{ steps.ext-cache.outputs.dir }}
          key: ${{ steps.ext-cache.outputs.key }}
          restore-keys: ${{ steps.ext-cache.outputs.key }}

      - name: Setup PHP environment
        id: finishPrepare
        uses: shivammathur/setup-php@e2e76ea34f2059c0d66bf5c54ea75610185397f3 # pin@v2
        with:
          php-version: ${{ env.php }}
          extensions: ${{ env.extensions }}
          coverage: none
          tools: |
            composer:2.1.10, composer-normalize:2.18.0, composer-require-checker:3.3.0,
            composer-unused:0.7.7, phpcpd:6.0.3, phpmd:2.10.2

      - name: Validate composer.json/composer.lock
        if: always() && steps.finishPrepare.outcome == 'success'
        run: composer validate --strict --no-check-version --no-check-all

      - name: Ensure that composer.json is normalized
        if: always() && steps.finishPrepare.outcome == 'success'
        run: composer-normalize --dry-run

      - name: Check for unused Composer dependencies
        if: always() && steps.finishPrepare.outcome == 'success'
        run: composer unused --no-progress

      - name: Check for duplicated code
        if: always() && steps.finishPrepare.outcome == 'success'
        run: phpcpd --fuzzy --exclude tests --exclude vendor .

      - name: Statically analyze using PHPMD
        if: always() && steps.finishPrepare.outcome == 'success'
        run: phpmd . github phpmd.xml.dist --exclude 'dependencies/*,tests/*,vendor/*' --reportfile-sarif sarif/phpmd.sarif

      - name: Upload code scanning results to GitHub
        if: always() && steps.finishPrepare.outcome == 'success'
        uses: github/codeql-action/upload-sarif@fd3190bba58b65cbefb742009518a03a07af24d7 # pin@v1
        with:
          sarif_file: sarif

  coding-style:
    name: Coding Style & Frontend Analysis

    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      php: "8.0"

    steps:
      - name: Checkout
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # pin@v2

      - name: Set up Node.js problem matchers
        uses: actions/setup-node@270253e841af726300e85d718a5f606959b2903c # pin@v2

      - name: Cache npm dependencies
        uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353 # pin@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install npm dependencies
        run: npm ci
        working-directory: panel

      - name: Setup PHP environment
        uses: shivammathur/setup-php@e2e76ea34f2059c0d66bf5c54ea75610185397f3 # pin@v2
        with:
          php-version: ${{ env.php }}
          coverage: none
          tools: php-cs-fixer:3.2.1

      - name: Cache analysis data
        id: finishPrepare
        uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353 # pin@v2
        with:
          path: ~/.php-cs-fixer
          key: coding-style

      - name: Check for JavaScript coding style violations
        if: always() && steps.finishPrepare.outcome == 'success'
        # Use the --no-fix flag in push builds to get a failed CI status
        run: >
          npm run lint -- --max-warnings 0 --format stylish
          ${{ github.event_name != 'pull_request' && '--no-fix' || '' }}
        working-directory: panel

      - name: Create code suggestions from the coding style changes (on PR only)
        if: >
          always() && steps.finishPrepare.outcome == 'success' &&
          github.event_name == 'pull_request'
        uses: reviewdog/action-suggester@1b18099af6c3c023256eb87a27aab5623e9b934d # pin@v1
        with:
          tool_name: ESLint
          fail_on_error: 'true'

      - name: Check for PHP coding style violations
        if: always() && steps.finishPrepare.outcome == 'success'
        # Use the --dry-run flag in push builds to get a failed CI status
        run: >
          php-cs-fixer fix --diff
          ${{ github.event_name != 'pull_request' && '--dry-run' || '' }}

      - name: Create code suggestions from the coding style changes (on PR only)
        if: >
          always() && steps.finishPrepare.outcome == 'success' &&
          github.event_name == 'pull_request'
        uses: reviewdog/action-suggester@1b18099af6c3c023256eb87a27aab5623e9b934d # pin@v1
        with:
          tool_name: PHP-CS-Fixer
          fail_on_error: 'true'
